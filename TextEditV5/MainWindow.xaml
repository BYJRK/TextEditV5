<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TextEditV5"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" x:Class="TextEditV5.MainWindow"
        mc:Ignorable="d" Height="800" Width="800"
        Title="文本编辑器" MinHeight="600" MinWidth="800" Icon="Icons/EditorIcon.ico" Background="{DynamicResource bColor}" Closed="Window_Closed" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <!--自定义Converter-->
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <local:PositionNumberToVisibilityConverter x:Key="PositionNumberToVisibilityConverter"/>
        <local:AndMultiBoolToVisibilityConverter x:Key="AndMultiBoolToVisibilityConverter"/>
        <local:OrMultiBoolToVisibilityConverter x:Key="OrMultiBoolToVisibilityConverter"/>
        <local:AndMultiNumberToVisibilityConverter x:Key="AndMultiNumberToVisibilityConverter"/>
        <!--在绘制界面期间，为便于观察效果，可设置为Visible。在发布时务必改为Collapsed-->
        <Visibility x:Key="DesignVisibility">Collapsed</Visibility>
        <!--常量-->
        <SolidColorBrush x:Key="WarningColor" Color="DeepPink"/>
        <SolidColorBrush x:Key="HintColor" Color="Green"/>
        <!--快捷键-->
        <RoutedUICommand x:Key="OpenFileShortcut"/>
        <RoutedUICommand x:Key="SaveFileShortcut"/>
        <RoutedUICommand x:Key="SaveFileAsShortcut"/>
        <RoutedUICommand x:Key="ApplyShortcut"/>
        <RoutedUICommand x:Key="ClearShortcut"/>
        <RoutedUICommand x:Key="FoldLeftShortcut"/>
        <RoutedUICommand x:Key="FoldRightShortcut"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{StaticResource OpenFileShortcut}" Gesture="Ctrl+O"/>
        <KeyBinding Command="{StaticResource SaveFileShortcut}" Gesture="Ctrl+S"/>
        <KeyBinding Command="{StaticResource SaveFileAsShortcut}" Gesture="Ctrl+Shift+S"/>
        <KeyBinding Command="{StaticResource ApplyShortcut}" Gesture="Ctrl+Enter"/>
        <KeyBinding Command="{StaticResource ClearShortcut}" Gesture="Ctrl+Q"/>
        <KeyBinding Command="{StaticResource FoldLeftShortcut}" Gesture="Ctrl+Left"/>
        <KeyBinding Command="{StaticResource FoldRightShortcut}" Gesture="Ctrl+Right"/>
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource OpenFileShortcut}" Executed="OpenFileShortcutExecuted"/>
        <CommandBinding Command="{StaticResource SaveFileShortcut}" Executed="SaveFileShortcutExecuted"/>
        <CommandBinding Command="{StaticResource SaveFileAsShortcut}" Executed="SaveFileAsShortcutExecuted"/>
        <CommandBinding Command="{StaticResource ApplyShortcut}" Executed="ApplyShortcutExecuted"/>
        <CommandBinding Command="{StaticResource ClearShortcut}" Executed="ClearShortcutExecuted"/>
        <CommandBinding Command="{StaticResource FoldLeftShortcut}" Executed="FoldLeftShortcutExecuted"/>
        <CommandBinding Command="{StaticResource FoldRightShortcut}" Executed="FoldRightShortcutExecuted"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="225" Name="LeftMenuContainer"/>
            <ColumnDefinition Width="3"/>
            <ColumnDefinition Width="3*" MinWidth="400"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1">
            <StackPanel Background="{DynamicResource bColor}">
                <StackPanel.Resources>
                    <Style TargetType="RadioButton" x:Key="FunctionRadioButtonStyle">
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Foreground" Value="#FF1A9EC5"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Style>
                    <Style TargetType="Panel" x:Key="ChildPanelStyle">
                        <Setter Property="Background" Value="#262D96E1"/>
                        <Setter Property="Margin" Value="0,5"/>
                    </Style>
                    <Style TargetType="TextBox" x:Key="LeftInputBox">
                        <Setter Property="MinHeight" Value="24"/>
                        <Setter Property="Margin" Value="3"/>
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="{DynamicResource fColor}"/>
                        <Setter Property="Background" Value="{DynamicResource bColor}"/>
                    </Style>
                    <Style TargetType="Button" x:Key="LeftSmallButton">
                        <Setter Property="Background" Value="#3FFFFFFF"/>
                        <Setter Property="Height" Value="19"/>
                        <Setter Property="Margin" Value="5,3"/>
                    </Style>
                    <Style TargetType="CheckBox" x:Key="LeftCheckBox">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Foreground" Value="{DynamicResource fColor}"/>
                    </Style>
                    <Style TargetType="RadioButton" x:Key="LeftRadioButton">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Foreground" Value="{DynamicResource fColor}"/>
                    </Style>
                    <Style TargetType="TextBlock" x:Key="LeftTextBlockStyle">
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Foreground" Value="{DynamicResource fColor}"/>
                    </Style>
                    <Style TargetType="Border" x:Key="LeftTextBorderStyle">
                        <Setter Property="Margin" Value="3"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="3"/>
                    </Style>
                    <Style TargetType="Button" x:Key="LeftButtonStyle">
                        <Setter Property="Height" Value="22"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </StackPanel.Resources>
                <!--内容查找与替换-->
                <RadioButton Name="ReplaceText" Margin="5,10,5,5" IsChecked="True" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">内容查找与替换</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=ReplaceText,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Text="查找内容" HorizontalAlignment="Center" Style="{DynamicResource LeftTextBlockStyle}"/>
                    <TextBox Name="rtFindText" Style="{DynamicResource LeftInputBox}"/>
                    <Grid>
                        <TextBlock Text="替换为" HorizontalAlignment="Center" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <Button Name="rtExchangeButton" HorizontalAlignment="Right" BorderBrush="Transparent" Style="{DynamicResource LeftSmallButton}" Click="ExchangeButton_Click">
                            <Image Source="Icons/ic_unfold_more_black_24dp.png" Height="15"/>
                        </Button>
                    </Grid>
                    <TextBox Name="rtReplacement" Style="{DynamicResource LeftInputBox}"/>
                    <CheckBox Name="rtIgnoreCase" Content="忽略大小写" Style="{DynamicResource LeftCheckBox}"/>
                </StackPanel>
                <!--删除括号内容-->
                <RadioButton Name="Bracket" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">删除括号内容</RadioButton>
                <Grid Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=Bracket,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Name="brLeft" HorizontalContentAlignment="Right" Style="{DynamicResource LeftInputBox}"/>
                    <TextBox Name="brRight" Style="{DynamicResource LeftInputBox}" Grid.Column="2"/>
                    <Button Name="brExchangeButton" Grid.Column="1" HorizontalAlignment="Center" BorderBrush="Transparent" Style="{DynamicResource LeftSmallButton}" Click="ExchangeButton_Click">
                        <Image Source="Icons/ic_unfold_more_black_24dp.png" Height="15" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Button>
                    <TextBlock Text="常见括号对：" Grid.Row="1" Style="{DynamicResource LeftTextBlockStyle}"/>
                    <ComboBox Name="brPairList" FontSize="13" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="3" Style="{DynamicResource MyComboBoxStyle}" HorizontalContentAlignment="Center" SelectionChanged="brPairList_SelectionChanged">
                        <TextBlock Text="( )"/>
                        <TextBlock Text="（ ）"/>
                        <TextBlock Text="[ ]"/>
                        <TextBlock Text="【 】"/>
                        <TextBlock Text="{}{ }"/>
                        <TextBlock Text="｛ ｝"/>
                        <TextBlock Text="&lt; &gt;"/>
                        <TextBlock Text="＜ ＞"/>
                        <TextBlock Text="《 》"/>
                        <TextBlock Text="「 」"/>
                        <TextBlock Text="『 』"/>
                        <TextBlock Text="&apos; &apos;"/>
                        <TextBlock Text="&quot; &quot;"/>
                    </ComboBox>
                    <StackPanel Grid.ColumnSpan="3" Grid.Row="2">
                        <Separator/>
                        <CheckBox Name="brKeepBracket" Content="保留括号" Style="{DynamicResource LeftCheckBox}"/>
                        <CheckBox Name="brShowBracketContent" Content="保留括号中内容" Style="{DynamicResource LeftCheckBox}" Checked="Box2Button_Checked" Unchecked="Box2Button_Unchecked"/>
                        <CheckBox Name="brNestBracket" Content="识别嵌套括号" Style="{DynamicResource LeftCheckBox}"/>
                        <Border BorderBrush="{StaticResource HintColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{Binding ElementName=brNestBracket,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                            <TextBlock Text="在识别括号对的情况下，左右括号内容只能为单个字符。" TextWrapping="Wrap" Foreground="{StaticResource HintColor}"/>
                        </Border>
                    </StackPanel>
                </Grid>
                <!--删除空白-->
                <RadioButton Name="DeleteBlank" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">删除空白</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=DeleteBlank,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <StackPanel>
                        <RadioButton Name="dbRemoveAll" Content="全部删除" Style="{DynamicResource LeftRadioButton}" IsChecked="True"/>
                        <RadioButton Name="dbRemoveFront" Content="仅删除行首" Style="{DynamicResource LeftRadioButton}"/>
                        <RadioButton Name="dbRemoveEnd" Content="仅删除行尾" Style="{DynamicResource LeftRadioButton}"/>
                        <RadioButton Name="dbRemoveFrontAndEnd" Content="删除行首与行尾" Style="{DynamicResource LeftRadioButton}"/>
                    </StackPanel>
                </StackPanel>
                <!--换行符相关-->
                <RadioButton Name="NewlineSymbol" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">换行符相关</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=NewlineSymbol,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <RadioButton Name="nsRemoveAll" Content="删除全部换行符" Style="{DynamicResource LeftRadioButton}" IsChecked="True"/>
                    <RadioButton Name="nsRemoveUseless" Content="合并多余换行符" Style="{DynamicResource LeftRadioButton}"/>
                    <RadioButton Name="nsAddNewlines" Content="添加换行符" Style="{DynamicResource LeftRadioButton}"/>
                </StackPanel>
                <!--文本顺序调换-->
                <RadioButton Name="TextOrder" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">文本顺序调换</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=TextOrder,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <RadioButton Name="toByLine" Content="全文逐行" Style="{DynamicResource LeftRadioButton}" IsChecked="True"/>
                    <RadioButton Name="toByWord" Content="全文逐字" Style="{DynamicResource LeftRadioButton}"/>
                    <RadioButton Name="toByWordInLine" Content="逐行逐字" Style="{DynamicResource LeftRadioButton}"/>
                </StackPanel>
                <!--批量重复文本-->
                <RadioButton Name="RepeatText" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">批量重复文本</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=RepeatText,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="重复次数：" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="rptTime" Grid.Column="1" Style="{DynamicResource LeftInputBox}" HorizontalContentAlignment="Center" TextChanged="RepeatTextWarning_TextChanged">1</TextBox>
                    </Grid>
                    <CheckBox Name="rptAutoNewLine" Content="自动添加换行符" IsChecked="True" Style="{DynamicResource LeftCheckBox}"/>
                    <Border Name="rptWarning" BorderBrush="{StaticResource WarningColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{DynamicResource DesignVisibility}">
                        <TextBlock Text="⚠即将生成的文本字数过大，可能会导致卡顿甚至宕机，请慎用！" TextWrapping="Wrap" Foreground="{StaticResource WarningColor}"/>
                    </Border>
                    <Border Name="rptNANWarning" BorderBrush="{StaticResource WarningColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{DynamicResource DesignVisibility}">
                        <TextBlock Text="⚠输入数字无效，请输入一个正整数。" TextWrapping="Wrap" Foreground="{StaticResource WarningColor}"/>
                    </Border>
                </StackPanel>
                <!--隔行删除-->
                <RadioButton Name="DeleteByLine" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">隔行删除</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=DeleteByLine,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="保留" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="dblReserve" Text="1" Width="40" HorizontalContentAlignment="Center" Style="{DynamicResource LeftInputBox}"/>
                        <TextBlock Text="行" Style="{DynamicResource LeftTextBlockStyle}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="删除" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="dblRemove" Text="1" Width="40" HorizontalContentAlignment="Center" Style="{DynamicResource LeftInputBox}"/>
                        <TextBlock Text="行" Style="{DynamicResource LeftTextBlockStyle}"/>
                    </StackPanel>
                    <Separator/>
                    <CheckBox Name="dblShowRemovedResults" Content="展示被删除的内容" Style="{DynamicResource LeftCheckBox}" Checked="Box2Button_Checked" Unchecked="Box2Button_Unchecked"/>
                    <Border BorderBrush="{StaticResource WarningColor}" Style="{DynamicResource LeftTextBorderStyle}">
                        <Border.Visibility>
                            <MultiBinding Converter="{StaticResource AndMultiNumberToVisibilityConverter}">
                                <Binding ElementName="dblReserve" Path="Text"/>
                                <Binding ElementName="dblRemove" Path="Text"/>
                            </MultiBinding>
                        </Border.Visibility>
                        <TextBlock Text="⚠输入数字无效，请输入一个正整数。" TextWrapping="Wrap" Foreground="{StaticResource WarningColor}"/>
                    </Border>
                </StackPanel>
                <!--隔行插入-->
                <RadioButton Name="InsertByLine" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Checked="Box2Button_Checked" Unchecked="Box2Button_Unchecked" Click="TitleRadioButton_Click">隔行插入</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=InsertByLine,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="保留" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="iblReserve" Text="1" Width="40" HorizontalContentAlignment="Center" Style="{DynamicResource LeftInputBox}"/>
                        <TextBlock Text="行" Style="{DynamicResource LeftTextBlockStyle}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="插入" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="iblInsert" Text="1" Width="40" HorizontalContentAlignment="Center" Style="{DynamicResource LeftInputBox}"/>
                        <TextBlock Text="行" Style="{DynamicResource LeftTextBlockStyle}"/>
                    </StackPanel>
                    <Border BorderBrush="{StaticResource WarningColor}" Style="{DynamicResource LeftTextBorderStyle}">
                        <Border.Visibility>
                            <MultiBinding Converter="{StaticResource AndMultiNumberToVisibilityConverter}">
                                <Binding ElementName="iblReserve" Path="Text"/>
                                <Binding ElementName="iblInsert" Path="Text"/>
                            </MultiBinding>
                        </Border.Visibility>
                        <TextBlock Text="⚠输入数字无效，请输入一个正整数。" TextWrapping="Wrap" Foreground="{StaticResource WarningColor}"/>
                    </Border>
                </StackPanel>
                <!--逐行插入相同内容-->
                <RadioButton Name="AddByLine" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">逐行插入相同内容</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=AddByLine,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBox Name="ablInsertContent" Style="{DynamicResource LeftInputBox}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="插入位置：" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="ablPosition" Text="0" Grid.Column="1" HorizontalContentAlignment="Center" Style="{DynamicResource LeftInputBox}"/>
                    </Grid>
                    <Separator/>
                    <RadioButton Name="ablNoIgnore" Content="全部添加" Style="{DynamicResource LeftRadioButton}" IsChecked="True"/>
                    <RadioButton Name="ablIgnoreEmpty" Content="忽略空行" Style="{DynamicResource LeftRadioButton}"/>
                    <RadioButton Name="ablIgnoreBlank" Content="忽略空白行" Style="{DynamicResource LeftRadioButton}"/>
                    <Border BorderBrush="{StaticResource WarningColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{Binding ElementName=ablPosition,Path=Text,Converter={StaticResource PositionNumberToVisibilityConverter}}">
                        <TextBlock Text="⚠输入位置无效，请检查。" TextWrapping="Wrap" Foreground="{StaticResource WarningColor}"/>
                    </Border>
                    <Border Name="ablHint" BorderBrush="{StaticResource HintColor}" Style="{DynamicResource LeftTextBorderStyle}">
                        <Border.Visibility>
                            <MultiBinding Converter="{StaticResource OrMultiBoolToVisibilityConverter}">
                                <Binding ElementName="ablIgnoreEmpty" Path="IsChecked"/>
                                <Binding ElementName="ablIgnoreBlank" Path="IsChecked"/>
                            </MultiBinding>
                        </Border.Visibility>
                        <TextBlock TextWrapping="Wrap" Foreground="{StaticResource HintColor}">
                            【空行】指某一行没有任何内容；<LineBreak/>
                            【空白行】指某一行只有空格、换行符等空白符。
                        </TextBlock>
                    </Border>
                </StackPanel>

                <!--逐行插入不同内容-->
                <RadioButton Name="SpecialInsert" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Checked="Box2Button_Checked" Unchecked="Box2Button_Unchecked" Click="TitleRadioButton_Click">逐行插入不同内容</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=SpecialInsert,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="插入位置：" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="siPosition" Text="0" Grid.Column="1" HorizontalContentAlignment="Center" Style="{DynamicResource LeftInputBox}"/>
                    </Grid>
                    <Separator/>
                    <CheckBox Name="siIngoreEmpty" Content="忽略空行" Style="{DynamicResource LeftCheckBox}"/>
                    <Border Name="siPositionWarning" BorderBrush="{StaticResource WarningColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{Binding ElementName=siPosition,Path=Text,Converter={StaticResource PositionNumberToVisibilityConverter}}">
                        <TextBlock Text="⚠输入位置无效，请检查。" TextWrapping="Wrap" Foreground="{StaticResource WarningColor}"/>
                    </Border>
                    <Border BorderBrush="{StaticResource HintColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{Binding ElementName=siIngoreEmpty,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Text="【忽略空行】忽略右边上方的文本框中的空行。" TextWrapping="Wrap" Foreground="{StaticResource HintColor}"/>
                    </Border>
                </StackPanel>
                <!--逐行添加序号-->
                <RadioButton Name="AddIndexByLine" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">逐行添加序号</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=AddIndexByLine,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBox Name="aiblLeft" Style="{DynamicResource LeftInputBox}"/>
                        <TextBlock Text="序号" Grid.Column="1" HorizontalAlignment="Center" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="aiblRight" Grid.Column="2" Style="{DynamicResource LeftInputBox}"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="插入位置：" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="aiblPosition" Text="0" Grid.Column="1" HorizontalContentAlignment="Center" Style="{DynamicResource LeftInputBox}"/>
                    </Grid>
                    <Grid Visibility="{Binding ElementName=aiblNormal,Path=IsChecked}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="起始值：" Grid.Row="1" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="aiblStartValue" Text="1" Grid.Column="1" Grid.Row="1" HorizontalContentAlignment="Center" Style="{DynamicResource LeftInputBox}"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.Visibility>
                            <MultiBinding Converter="{StaticResource AndMultiBoolToVisibilityConverter}">
                                <Binding ElementName="aiblAlignNumber" Path="IsChecked"/>
                                <Binding ElementName="aiblNormal" Path="IsChecked"/>
                            </MultiBinding>
                        </Grid.Visibility>
                        <TextBlock Text="数字位数：" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="aiblDigits" Text="3" Grid.Column="1" Grid.Row="2" HorizontalContentAlignment="Center" Style="{DynamicResource LeftInputBox}"/>
                    </Grid>
                    <Separator/>
                    <CheckBox Content="对齐数字" Name="aiblAlignNumber" Style="{DynamicResource LeftCheckBox}" IsEnabled="{Binding ElementName=aiblNormal,Path=IsChecked}" Visibility="{Binding ElementName=aiblNormal,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <CheckBox Content="忽略空行" Name="aiblIgnoreEmpty" Style="{DynamicResource LeftCheckBox}"/>
                    <Separator/>
                    <RadioButton Content="阿拉伯数字（1,2,3...）" Name="aiblNormal" Style="{DynamicResource LeftRadioButton}" IsChecked="True"/>
                    <RadioButton Content="中文数字（一,二,三...）" Name="aiblChinese" Style="{DynamicResource LeftRadioButton}"/>
                    <RadioButton Content="罗马数字（I,II,III...）" Name="aiblRoman" Style="{DynamicResource LeftRadioButton}"/>
                    <RadioButton Content="圆圈数字（①,②,③...）" Name="aiblCircle" Style="{DynamicResource LeftRadioButton}"/>
                    <RadioButton Content="括号数字（⑴,⑵,⑶...）" Name="aiblBracket" Style="{DynamicResource LeftRadioButton}"/>
                    <Border BorderBrush="{StaticResource HintColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{Binding ElementName=aiblChinese,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Text="中文数字最大为999,999,999,999" TextWrapping="Wrap" Foreground="{StaticResource HintColor}"/>
                    </Border>
                    <Border BorderBrush="{StaticResource HintColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{Binding ElementName=aiblRoman,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Text="罗马数字最大为3,999" TextWrapping="Wrap" Foreground="{StaticResource HintColor}"/>
                    </Border>
                    <Border BorderBrush="{StaticResource HintColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{Binding ElementName=aiblCircle,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Text="圆圈数字最大为10" TextWrapping="Wrap" Foreground="{StaticResource HintColor}"/>
                    </Border>
                    <Border BorderBrush="{StaticResource HintColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{Binding ElementName=aiblBracket,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Text="括号数字最大为20" TextWrapping="Wrap" Foreground="{StaticResource HintColor}"/>
                    </Border>
                    <Border BorderBrush="{StaticResource WarningColor}" Style="{DynamicResource LeftTextBorderStyle}">
                        <Border.Visibility>
                            <MultiBinding Converter="{StaticResource AndMultiNumberToVisibilityConverter}">
                                <Binding ElementName="aiblDigits" Path="Text"/>
                                <Binding ElementName="aiblStartValue" Path="Text"/>
                            </MultiBinding>
                        </Border.Visibility>
                        <TextBlock Text="⚠输入数字无效，请输入一个正整数。" TextWrapping="Wrap" Foreground="{StaticResource WarningColor}"/>
                    </Border>
                    <Border BorderBrush="{StaticResource WarningColor}" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{Binding ElementName=aiblPosition,Path=Text,Converter={StaticResource PositionNumberToVisibilityConverter}}">
                        <TextBlock Text="⚠输入位置无效，请检查。" TextWrapping="Wrap" Foreground="{StaticResource WarningColor}"/>
                    </Border>
                </StackPanel>
                <!--文本格式转换-->
                <RadioButton Name="FormatText" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">文本格式转换</RadioButton>
                <WrapPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=FormatText,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <RadioButton Name="ftST" Content="简体转繁体" Style="{DynamicResource LeftRadioButton}" IsChecked="True"/>
                    <RadioButton Name="ftTS" Content="繁体转简体" Style="{DynamicResource LeftRadioButton}"/>
                    <RadioButton Name="ftLU" Content="小写转大写" Style="{DynamicResource LeftRadioButton}"/>
                    <RadioButton Name="ftUL" Content="大写转小写" Style="{DynamicResource LeftRadioButton}"/>
                    <RadioButton Name="ftFU" Content="首字母大写" Style="{DynamicResource LeftRadioButton}"/>
                    <RadioButton Name="ftCP" Content="汉字转拼音" Style="{DynamicResource LeftRadioButton}"/>
                </WrapPanel>
                <!--自定义转换列表-->
                <RadioButton Name="TransformList" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">自定义转换列表</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=TransformList,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <ComboBox Name="TransformListFiles" FontSize="13" Margin="5" Height="22" VerticalContentAlignment="Center" Style="{DynamicResource MyComboBoxStyle}" SelectionChanged="TransformListFiles_SelectionChanged"/>
                    <CheckBox Name="tlR" Content="反向替换" Style="{DynamicResource LeftCheckBox}"/>
                    <Separator/>
                    <Button Content="更新所有列表" Width="100" HorizontalAlignment="Left" Style="{DynamicResource LeftButtonStyle}" Click="UpdatePairListControl"/>
                    <Button Content="编辑列表内容" Width="100" HorizontalAlignment="Left" Style="{DynamicResource LeftButtonStyle}" Click="ShowPairListControl"/>
                </StackPanel>
                <!--正则表达式-->
                <RadioButton Name="RegularExpression" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">正则表达式</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=RegularExpression,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Text="查找内容" HorizontalAlignment="Center" Style="{DynamicResource LeftTextBlockStyle}"/>
                    <TextBox Name="reFind" TextWrapping="Wrap" AcceptsReturn="True" Style="{DynamicResource LeftInputBox}"/>
                    <StackPanel Visibility="{Binding ElementName=reShowOnly,Path=IsChecked,Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <TextBlock Text="替换为" HorizontalAlignment="Center" Style="{DynamicResource LeftTextBlockStyle}"/>
                        <TextBox Name="reReplace" AcceptsReturn="True" TextWrapping="Wrap" Style="{DynamicResource LeftInputBox}"/>
                    </StackPanel>
                    <Separator/>
                    <CheckBox Name="reIgnoreCase" Content="忽略大小写" Style="{DynamicResource LeftCheckBox}"/>
                    <CheckBox Name="reMultiline" Content="多行模式" Style="{DynamicResource LeftCheckBox}"/>
                    <CheckBox Name="reSingleline" Content="单行模式" Style="{DynamicResource LeftCheckBox}"/>
                    <CheckBox Name="reIgnorePatternWhitespace" Content="忽略空白" Style="{DynamicResource LeftCheckBox}"/>
                    <CheckBox Name="reExplicitCapture" Content="显式捕获" Style="{DynamicResource LeftCheckBox}"/>
                    <Separator/>
                    <RadioButton Name="reReplaceOnly" Content="不展示匹配到的内容" Style="{DynamicResource LeftRadioButton}" IsChecked="True"/>
                    <RadioButton Name="reReplaceAndShow" Content="展示并替换匹配到的内容" Style="{DynamicResource LeftRadioButton}" Checked="Box2Button_Checked" Unchecked="Box2Button_Unchecked"/>
                    <RadioButton Name="reShowOnly" Content="仅展示匹配到的内容" Style="{DynamicResource LeftRadioButton}" Checked="Box2Button_Checked" Unchecked="Box2Button_Unchecked"/>
                </StackPanel>
                <!--文件批量重命名-->
                <RadioButton Name="RenameFiles" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Checked="Box2Button_Checked" Unchecked="Box2Button_Unchecked" Click="TitleRadioButton_Click">文件批量重命名</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=RenameFiles,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock HorizontalAlignment="Center" FontSize="16" Text=" 简易教程" Style="{DynamicResource LeftTextBlockStyle}"/>
                    <TextBlock TextWrapping="Wrap" Style="{DynamicResource LeftTextBlockStyle}">
                        1. 使用【文件|打开】导入文件列表
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Style="{DynamicResource LeftTextBlockStyle}">
                        2. 对上方文本框中内容进行编辑
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Style="{DynamicResource LeftTextBlockStyle}">
                        3. 单击【执行】执行重命名操作
                    </TextBlock>
                </StackPanel>
                <!--剪贴板辅助工具-->
                <RadioButton Name="ClipboardHelper" Style="{DynamicResource FunctionRadioButtonStyle}" Template="{DynamicResource MyRadioButtonControlTemplate}" Click="TitleRadioButton_Click">剪贴板辅助工具</RadioButton>
                <StackPanel Style="{DynamicResource ChildPanelStyle}" Visibility="{Binding ElementName=ClipboardHelper,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                    <CheckBox Name="chCycle" Content="循环粘贴" Visibility="{Binding ElementName=chAutoPaste,Path=IsChecked,Converter={StaticResource InverseBoolToVisibilityConverter}}" Style="{DynamicResource LeftCheckBox}"/>
                    <Grid>
                        <CheckBox Name="chIgnoreBlank" Content="忽略空行" Style="{DynamicResource LeftCheckBox}"/>
                        <Button Name="chStopButton" Content="停止" Margin="5,0,5,0" Width="50" HorizontalAlignment="Right" Visibility="{StaticResource DesignVisibility}" Style="{DynamicResource LeftButtonStyle}" Click="ClipboardHelperStop"/>
                    </Grid>
                    <Separator/>
                    <CheckBox Name="chAutoPaste" Content="自动粘贴" Style="{DynamicResource LeftCheckBox}"/>
                    <StackPanel Visibility="{Binding ElementName=chAutoPaste,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="粘贴延迟：" Style="{DynamicResource LeftTextBlockStyle}"/>
                            <TextBlock Text="切换按键：" Grid.Row="1" Style="{DynamicResource LeftTextBlockStyle}"/>
                            <TextBox Name="chDelay" Text="250" Grid.Column="1" Style="{DynamicResource LeftInputBox}" TextChanged="chDelay_TextChanged"/>
                            <ComboBox Name="chAutoKeyDown" FontSize="13" Grid.Row="1" Grid.Column="1" Margin="3" Style="{DynamicResource MyComboBoxStyle}" IsEditable="True" SelectedIndex="2">
                                <ComboBoxItem Content="NONE"/>
                                <ComboBoxItem Content="TAB"/>
                                <ComboBoxItem Content="ENTER"/>
                                <ComboBoxItem Content="DOWN"/>
                            </ComboBox>
                        </Grid>
                        <Border Name="chNANWarning" BorderBrush="{StaticResource WarningColor}" Grid.Row="2" Grid.ColumnSpan="2" Style="{DynamicResource LeftTextBorderStyle}" Visibility="{DynamicResource DesignVisibility}">
                            <TextBlock Text="⚠输入数字无效，请输入一个正整数。" TextWrapping="Wrap" Foreground="{StaticResource WarningColor}"/>
                        </Border>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
        <Border Grid.Row="2" Grid.Column="3">
            <ContentControl Name="RightContentControl" Background="{DynamicResource bColor}">
            </ContentControl>
        </Border>
        <Border Grid.Row="1" Grid.Column="1">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="0"/>
            </Border.Effect>
            <Button BorderThickness="0" Background="White" Click="FoldLeftMenu_Click"/>
        </Border>
        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="3" Background="White">
            <StackPanel.Resources>
                <Style TargetType="Button" x:Key="MenuButtonStyle">
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Padding" Value="4,0"/>
                </Style>
                <Style TargetType="Popup" x:Key="MenuItemList">
                    <Setter Property="StaysOpen" Value="False"/>
                    <Setter Property="VerticalOffset" Value="3"/>
                </Style>
                <Style TargetType="Button" x:Key="MenuItemStyle">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="Padding" Value="2,0,8,0"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="Height" Value="24"/>
                </Style>
            </StackPanel.Resources>
            <StackPanel.Effect>
                <DropShadowEffect ShadowDepth="0" Direction="0"/>
            </StackPanel.Effect>
            <Button Name="FileButton" Click="MenuItem_Click" Style="{StaticResource MenuButtonStyle}" Content="文件"/>
            <Button Style="{StaticResource MenuButtonStyle}" Click="ShowEditorControl" Content="编辑"/>
            <Button Name="OptionButton" Click="MenuItem_Click" Style="{StaticResource MenuButtonStyle}" Content="相关"/>
            <Button Name="CountWordButton" Style="{StaticResource MenuButtonStyle}" Content="字数统计" Click="CountWord_Click"/>
            <Popup Name="FileButtonPopup" PlacementTarget="{Binding ElementName=FileButton}" Style="{StaticResource MenuItemList}">
                <Border Padding="2" Background="White" Width="150">
                    <StackPanel Background="White">
                        <StackPanel.Effect>
                            <DropShadowEffect ShadowDepth="0"/>
                        </StackPanel.Effect>
                        <Button Style="{StaticResource MenuItemStyle}" Content="打开" Click="OpenFile_Click"/>
                        <Button Style="{StaticResource MenuItemStyle}" Content="打开文件目录" Click="OpenDictionary_Click"/>
                        <Separator/>
                        <Button Style="{StaticResource MenuItemStyle}" Content="保存" Click="SaveFile_Click"/>
                        <Button Style="{StaticResource MenuItemStyle}" Content="另存为" Click="SaveFileAs_Click"/>
                        <Separator/>
                        <Button Style="{StaticResource MenuItemStyle}" Content="关闭" Click="Close_Click"/>
                    </StackPanel>
                </Border>
            </Popup>
            <Popup Name="OptionButtonPopup" PlacementTarget="{Binding ElementName=OptionButton}" Style="{StaticResource MenuItemList}">
                <Border Padding="2" Background="White" Width="150">
                    <StackPanel Background="White">
                        <StackPanel.Effect>
                            <DropShadowEffect ShadowDepth="0"/>
                        </StackPanel.Effect>
                        <Button Style="{StaticResource MenuItemStyle}" Click="ShowOptionControl" Content="设置"/>
                        <Button Style="{StaticResource MenuItemStyle}" Content="重置功能列表"/>
                        <Separator/>
                        <Button Style="{StaticResource MenuItemStyle}" Content="帮助"/>
                        <Button Style="{StaticResource MenuItemStyle}" Content="版本信息"/>
                        <Button Style="{StaticResource MenuItemStyle}" Content="检查更新"/>
                    </StackPanel>
                </Border>
            </Popup>
        </StackPanel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.ColumnSpan="3">
            <StackPanel.Resources>
                <Style TargetType="Button" x:Key="FunctionButtonStyle">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Margin" Value="2,0"/>
                    <Setter Property="Padding" Value="5,0"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="BorderBrush" Value="#FFDDDDDD"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Style>
                <Style TargetType="Image" x:Key="FunctionButtonIconStyle">
                    <Setter Property="Height" Value="16"/>
                    <Setter Property="VerticalAlignment" Value="Bottom"/>
                    <Setter Property="Margin" Value="3,0,0,0"/>
                </Style>
                <Style TargetType="TextBlock" x:Key="FunctionButtonTextStyle">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="15"/>
                </Style>
            </StackPanel.Resources>
            <Button Style="{StaticResource FunctionButtonStyle}" Click="ApplyButton_Click">
                <Button.ToolTip>执行左边选择的功能（Ctrl+Enter）</Button.ToolTip>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="执行" Style="{StaticResource FunctionButtonTextStyle}"/>
                    <Image Source="Icons/ic_play_circle_outline_black_24dp.png" Style="{StaticResource FunctionButtonIconStyle}"/>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource FunctionButtonStyle}" Click="UndoButton_Click" BorderThickness="1,1,0,1" Margin="2,0,0,0">
                <Image Source="Icons/ic_undo_black_24dp.png" Style="{StaticResource FunctionButtonIconStyle}" Margin="0,0,4,0"/>
            </Button>
            <Button Style="{StaticResource FunctionButtonStyle}" Click="RedoButton_Click" BorderThickness="0,1,1,1" Margin="0,0,2,0">
                <Image Source="Icons/ic_redo_black_24dp.png" Style="{StaticResource FunctionButtonIconStyle}" Margin="3,0,0,0"/>
            </Button>

            <Button Style="{StaticResource FunctionButtonStyle}" Click="CopyButton_Click">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Name="CutCopyButtonText" Text="剪切" Style="{StaticResource FunctionButtonTextStyle}"/>
                    <Image Name="CopyIcon" Source="Icons/ic_content_copy_black_24dp.png" Style="{StaticResource FunctionButtonIconStyle}" Visibility="Collapsed"/>
                    <Image Name="CutIcon" Source="Icons/ic_content_cut_black_24dp.png" Style="{StaticResource FunctionButtonIconStyle}"/>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource FunctionButtonStyle}" Click="ClearButton_Click">
                <Button.ToolTip>清空所有正在显示的文本框（Ctrl+Q）</Button.ToolTip>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="清空" Style="{StaticResource FunctionButtonTextStyle}"/>
                    <Image Source="Icons/ic_clear_black_24dp.png" Style="{StaticResource FunctionButtonIconStyle}"/>
                </StackPanel>
            </Button>
        </StackPanel>
    </Grid>
</Window>